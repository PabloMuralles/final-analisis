summary (lmcompleto)
lmcompleto <- lm(Total_Orden ~ ., data=dfcompleto)
summary (lmcompleto)
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ ., data=dfcompleto)
summary (lmcompleto)
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ ., data=trainingDataCompleto)
summary (lmcompleto)
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ ., data=trainingDataCompleto)
summary (lmcompleto)
abline(lmcompleto)
abline(lm(Total_Orden ~ ., data=trainingDataCompleto))
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte , data=trainingDataCompleto)
summary (lmcompleto)
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
dfcompleto<-scale(dfcompleto)
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
dfcompleto<-scale(dfcompleto)
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
dfcompleto<-scale(dfcompleto)
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$NombreCiudad+lmcompleto$NombreRegion+lmcompleto$NombrePais+lmcompleto$NombreParte+lmcompleto$NombreCategoria+lmcompleto$NombreLinea+lmcompleto$Anio+lmcompleto$Marca+lmcompleto$Modelo+lmcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
##scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
##scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad, main="Hola")
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
##scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad, main="Hola")
#scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$, main="Hola")
#scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$, main="Hola")
##scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$NombreCiudad, main="PorcentajeDescuento~NombreParte")
#scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$, main="Hola")
##scatter.smooth(x=lmcompleto$Total_Orden, y=lmcompleto$NombreCiudad, main="PorcentajeDescuento~NombreParte")
#ggPredict(lmcompleto,interactive = TRUE)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
lmcompletoplot<-head(dfDescuentoParte, 700)
scatter.smooth(x=lmcompletoplot$Total_Orden, y=lmcompletoplot$NombreCiudad+lmcompletoplot$NombreRegion+lmcompletoplot$NombrePais+lmcompletoplot$NombreParte+lmcompletoplot$NombreCategoria+lmcompletoplot$NombreLinea+lmcompletoplot$Anio+lmcompletoplot$Marca+lmcompletoplot$Modelo+lmcompletoplot$NombreStatus, main="Hola")
##plot
lmcompletoplot<-head(lmcompleto, 700)
scatter.smooth(x=lmcompletoplot$Total_Orden, y=lmcompletoplot$NombreCiudad+lmcompletoplot$NombreRegion+lmcompletoplot$NombrePais+lmcompletoplot$NombreParte+lmcompletoplot$NombreCategoria+lmcompletoplot$NombreLinea+lmcompletoplot$Anio+lmcompletoplot$Marca+lmcompletoplot$Modelo+lmcompletoplot$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
dfcompleto<-head(200)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
dfcompleto<-head(200)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
dfcompleto<-head(100)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
dfcompleto<-head(1000)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
dfcompleto<-head(1000)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Hola")
View(lmcompletoplot)
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Total Orden")
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Total Orden")
##plot
dfcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Total Orden")
##plot
#lmcompleto<-head(dfDescuentoParte, 700)
scatter.smooth(x=dfcompleto$Total_Orden, y=dfcompleto$NombreCiudad+dfcompleto$NombreRegion+dfcompleto$NombrePais+dfcompleto$NombreParte+dfcompleto$NombreCategoria+dfcompleto$NombreLinea+dfcompleto$Anio+dfcompleto$Marca+dfcompleto$Modelo+dfcompleto$NombreStatus, main="Total Orden")
#7--#####################################################################################################################
dfcompleto<-dbGetQuery(con=con, "select O.Total_Orden,
c.Nombre as NombreCiudad,
R.Nombre as NombreRegion,
P.Nombre as NombrePais,
Pa.Nombre as NombreParte,
Ca.Nombre as NombreCategoria,
L.Nombre as NombreLinea,
V.Anio,
V.Marca,
V.Modelo,
S.NombreStatus
from Orden O inner join Ciudad C on O.ID_Ciudad=C.ID_Ciudad
inner join Region R on C.ID_Region=r.ID_Region
inner join Pais P on R.ID_Pais = p.ID_Pais
inner join Detalle_orden De on O.ID_Orden=De.ID_Orden
inner join Partes Pa on De.ID_Parte = Pa.ID_Parte
inner join Categoria Ca on Pa.ID_Categoria = Ca.ID_Categoria
inner join Linea L on Ca.ID_Linea = L.ID_Linea
inner join Vehiculo V on De.VehiculoID = V.VehiculoID
inner join StatusOrden S on S.ID_StatusOrden = O.ID_StatusOrden
")
#limpiar data
dfcompleto <- na.omit(dfcompleto)
#transformar data
dfcompleto<- transform(dfcompleto,NombreCiudad=as.numeric(as.factor(NombreCiudad)))
dfcompleto<- transform(dfcompleto,NombreRegion=as.numeric(as.factor(NombreRegion)))
dfcompleto<- transform(dfcompleto,NombrePais=as.numeric(as.factor(NombrePais)))
dfcompleto<- transform(dfcompleto,NombreParte=as.numeric(as.factor(NombreParte)))
dfcompleto<- transform(dfcompleto,NombreCategoria=as.numeric(as.factor(NombreCategoria)))
dfcompleto<- transform(dfcompleto,NombreLinea=as.numeric(as.factor(NombreLinea)))
dfcompleto<- transform(dfcompleto,Anio=as.numeric(as.factor(Anio)))
dfcompleto<- transform(dfcompleto,Marca=as.numeric(as.factor(Marca)))
dfcompleto<- transform(dfcompleto,Modelo=as.numeric(as.factor(Modelo)))
dfcompleto<- transform(dfcompleto,NombreStatus=as.numeric(as.factor(NombreStatus)))
#Creamos un modelo datos de train y test 80/20
set.seed(90)
trainingRowIndex <- sample(1:nrow(dfcompleto), 0.8*nrow(dfcompleto))
trainingDataCompleto <- dfcompleto[trainingRowIndex, ]
testDataCompleto  <- dfcompleto[-trainingRowIndex, ]
lmcompleto <- lm(Total_Orden ~ NombreCiudad+NombreRegion+NombrePais+NombreParte+NombreCategoria+NombreLinea+Anio+Marca+Modelo+NombreStatus , data=trainingDataCompleto)
summary (lmcompleto)
